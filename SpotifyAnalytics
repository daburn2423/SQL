# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

--#First I determined who the Top 10 artists are by popularity;
SELECT track_name, artist_name, popularity FROM BIT_DB.SpotifyData
ORDER BY popularity desc
LIMIT 10;


--#Then I determined what were the Top 10 highest tempo songs
SELECT track_name, artist_name, popularity, tempo FROM BIT_DB.SpotifyData
ORDER BY tempo desc
LIMIT 10;

--#Then I determined the avg popularity, danceability, and energy by artist and track. 
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

--#Then I selected how many tracks an artist had in the Top 50
SELECT COUNT(*) track_name, artist_name FROM BIT_DB.SpotifyData
GROUP BY artist_name
ORDER BY track_name desc;

--#Then I selected the Top 20 longest songs
SELECT track_name, artist_name, popularity,duration_ms FROM BIT_DB.SpotifyData
ORDER BY duration_ms desc
LIMIT 20;

--Then I selected the average duration and tempo of the songs in the Top 50
SELECT avg(duration_ms), avg(tempo) FROM BIT_DB.SpotifyData;
